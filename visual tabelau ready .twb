<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Name Parameter' datatype='string' name='[Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quiet&quot;'>
        <calculation class='tableau' formula='&quot;Quiet&quot;' />
        <members>
          <member value='&quot;Quiet&quot;' />
          <member value='&quot;Chic&quot;' />
          <member value='&quot;sunny &quot;' />
          <member value='&quot;cozy &quot;' />
          <member value='&quot;clean &quot;' />
          <member value='&quot;central park&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Name Parameter]' palette='red_10_0' type='palette'>
            <map to='#f26250'>
              <bucket>&quot;Quiet&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='AB_NYC_2019 (final tab airbnb)' inline='true' name='federated.1vlr7c10kxyods1a3g0ve1xh1ngm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final tab airbnb' name='excel-direct.05ps4ye0qi60pp1a376ns113ke1r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Administrator/Desktop/visua final dataset/visua-final.twb 个文件/Users/sarahbismuth/Desktop/final tab airbnb.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.05ps4ye0qi60pp1a376ns113ke1r' name='AB_NYC_2019' table='[AB_NYC_2019$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood_group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='reviews_per_month' ordinal='13' />
            <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
            <column datatype='integer' name='availability_365' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.525959' measure-ordering='alphabetic' measure-percentage='0.474041' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='AB_NYC_2019 (airbnb hw)' inline='true' name='federated.0xx353615o2q5g1byw26f0o8zru8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb hw' name='excel-direct.1qwegci1x4j1l515fmv6o01ul7bc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/sarahbismuth/Desktop/final tab airbnb.xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qwegci1x4j1l515fmv6o01ul7bc' name='AB_NYC_2019' table='[AB_NYC_2019$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood_group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='reviews_per_month' ordinal='13' />
            <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
            <column datatype='integer' name='availability_365' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AB_NYC_2019]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='budget' datatype='string' name='[Calculation_3269402289414258689]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [price]&lt;=80&#10;THEN LOWER(&apos;small  budget&apos;)&#10;ELSEIF [price]&gt;80 AND [price]&lt;=200&#10;THEN LOWER(&apos;Regular budget budget&apos;)&#10;ELSEIF [price]&gt;200&#10;THEN LOWER(&apos;Luxurious budget&apos;)&#10;END' />
      </column>
      <column caption='price distribution index' datatype='integer' name='[Calculation_452611829024161792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([price]&lt;=100,0,1)' />
      </column>
      <column datatype='string' name='[Neighbourhood (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[neighbourhood]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Tottenville&quot;'>
            <value>&quot;Tottenville&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Number Of Reviews (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[number_of_reviews]' peg='0' size='24.8' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[availability_365]' derivation='Avg' name='[avg:availability_365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minimum_nights]' derivation='Avg' name='[avg:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number_of_reviews]' derivation='Avg' name='[avg:number_of_reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[availability_365]' derivation='Sum' name='[sum:availability_365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minimum_nights]' derivation='Sum' name='[sum:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.537209' measure-ordering='alphabetic' measure-percentage='0.406977' parameter-percentage='0.055814' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:room_type:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bay Terrace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concourse Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockaway Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Farms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allerton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Borough Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Flatbush&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Howland Hook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Brighton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queens Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bronxdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;College Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melrose&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spuyten Duyvil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vinegar Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bayswater&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Castle Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cypress Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fieldston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morris Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rossville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Throgs Neck&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Whitestone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bay Terrace, Staten Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambria Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coney Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eltingville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mill Basin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Olinville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roosevelt Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bath Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eastchester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nolita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richmondtown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Albans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wakefield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claremont Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dyker Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fordham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Holliswood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Longwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Navy Yard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Two Bridges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodlawn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arden Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Breezy Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Hamilton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huguenot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marble Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Dorp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randall Manor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Ozone Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;City Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Highbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Little Neck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Hope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Richmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shore Acres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tremont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Windsor Terrace&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edenwald&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gramercy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica Estates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Midland Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Riverdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ridgewood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford-Stuyvesant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Castleton Corners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ditmars Steinway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grymes Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurelton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morrisania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pelham Bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schuylerville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Todt Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsbridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belle Harbor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dongan Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flatbush&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lighthouse Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mott Haven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pelham Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sea Gate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tompkinsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bensonhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hollis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prince&apos;s Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Silver Lake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clason Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Howard Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neponsit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soundview&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unionport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baychester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canarsie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emerson Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Great Kills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rosebank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westchester Square&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bull&apos;s Head&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concourse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edgemere&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graniteville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica Hills&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Midtown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Brighton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arrochar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briarwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Co-op City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Morrisania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Wadsworth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hunts Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariners Harbor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Dorp Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Slope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bellerose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Douglaston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flatiron District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Eden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Morris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tottenville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willowbrook&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll Gardens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Far Rockaway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingsbridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morris Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Theater District&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Westerleigh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arverne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresh Meadows&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Springville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springfield Gardens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Van Nest&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Neighbourhood (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Tottenville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:availability_365:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[Neighbourhood (group)]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:availability_365:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:number_of_reviews:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:number_of_reviews:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:price:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:minimum_nights:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:minimum_nights:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood_group:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='budget '>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column caption='budget' datatype='string' name='[Calculation_3269402289414258689]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price]&lt;=80&#10;THEN LOWER(&apos;small  budget&apos;)&#10;ELSEIF [price]&gt;80 AND [price]&lt;=200&#10;THEN LOWER(&apos;Regular budget budget&apos;)&#10;ELSEIF [price]&gt;200&#10;THEN LOWER(&apos;Luxurious budget&apos;)&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_3269402289414258689]' derivation='None' name='[none:Calculation_3269402289414258689:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' />
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' />
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]' />
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{627A725B-01E5-4770-881E-650CCC8EF56C}' />
    </worksheet>
    <worksheet name='distribution of airbnb in NYC '>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Map based on average of Longitude and average of Latitude.  Size shows sum of Number of Records.  The marks are labeled by Neighbourhood Group. We can see that a large proportion of the airbnb are located in Manhattan and BrookLyn. &#10;THis could be a first hint of where there is the more demand.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:longitude:qk]' field-type='quantitative' max='-8163716.6750609484' min='-8279027.2850360386' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:latitude:qk]' field-type='quantitative' max='4997831.0516030872' min='4944938.8856842108' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' />
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a51231' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:latitude:qk]</rows>
        <cols>[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{04BFDE5E-C633-4FA4-8060-4FEB90023095}' />
    </worksheet>
    <worksheet name='flexibility'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Conclusions:&#10;1.Private room has the most &apos;availability_365&apos; and least &apos;minimum_nights&apos;, which is the indicate of felexibility, so open a airbnb business in room type of Private room will provide the most felexibility to customers.&#10;2.Private room in Staten Island is comparetively has the most Availability_365 and Shared room in Staten Island is comparetively has the least minimum nights requirement, this indicate that the airbnb business in Staten Island is more competitive.&#10; </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
            <column-instance column='[availability_365]' derivation='Avg' name='[avg:availability_365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minimum_nights]' derivation='Avg' name='[avg:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[availability_365]' derivation='Sum' name='[sum:availability_365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minimum_nights]' derivation='Sum' name='[sum:minimum_nights:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:availability_365:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:minimum_nights:qk]&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:availability_365:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:availability_365:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:minimum_nights:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]</rows>
        <cols>([federated.0xx353615o2q5g1byw26f0o8zru8].[avg:availability_365:qk] + [federated.0xx353615o2q5g1byw26f0o8zru8].[avg:minimum_nights:qk])</cols>
      </table>
      <simple-id uuid='{6A0954C2-12F4-4B3B-BB5A-1388E8DC1F00}' />
    </worksheet>
    <worksheet name='neighbourhood group and price '>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Sum of Price for each Neighbourhood Group.&#10;Manhattan is where there is the most expensve airbnb with prices going way above the average price </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:price:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:price:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f00016' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:price:qk]</rows>
        <cols>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</cols>
      </table>
      <simple-id uuid='{27121673-7955-40B9-BFE0-A938894A7848}' />
    </worksheet>
    <worksheet name='neighbourhood parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Name Parameter' datatype='string' name='[Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quiet&quot;'>
              <calculation class='tableau' formula='&quot;Quiet&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column caption='budget' datatype='string' name='[Calculation_3269402289414258689]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [price]&lt;=80&#10;THEN LOWER(&apos;small  budget&apos;)&#10;ELSEIF [price]&gt;80 AND [price]&lt;=200&#10;THEN LOWER(&apos;Regular budget budget&apos;)&#10;ELSEIF [price]&gt;200&#10;THEN LOWER(&apos;Luxurious budget&apos;)&#10;END' />
            </column>
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3269402289414258689]' derivation='None' name='[none:Calculation_3269402289414258689:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[calculated_host_listings_count]' derivation='Sum' name='[sum:calculated_host_listings_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]'>
            <groupfilter function='member' level='[none:Calculation_3269402289414258689:nk]' member='&quot;small  budget&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:calculated_host_listings_count:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a51231' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Name Parameter] * [federated.0xx353615o2q5g1byw26f0o8zru8].[sum:calculated_host_listings_count:qk])</rows>
        <cols>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood:nk]</cols>
      </table>
      <simple-id uuid='{0D282BD3-8F3B-4AB5-A552-743E012A6E9F}' />
    </worksheet>
    <worksheet name='oposite-rela'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>EDA: we can find from this chart that the number of reviewers have a oposite tendency as the minimum nights, which means the when minimum nights for the airbnb room is more, the reviewers is less.&#10;Help decision making:&#10;when you trade airbnb as a part time job, you dont what your house have a lot reviews and to spend less time on giving the fadeback to reviews, you can set your minimum nights longer to help you spend less time and energy on running this part time business.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column-instance column='[minimum_nights]' derivation='Avg' name='[avg:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Avg' name='[avg:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:minimum_nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:number_of_reviews:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xx353615o2q5g1byw26f0o8zru8].[Multiple Values]</rows>
        <cols>([federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk] / [federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E4188443-68BF-47AB-9DAF-74CB84D28375}' />
    </worksheet>
    <worksheet name='popularity'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>1.Manhattan have the most expensive airbnb house and Bronx is cheapest.&#10;2. How many of the reviews seems have no relationship with the locations and price.&#10;&#10;So when you do a investment, when condidering about how many people can review your house and how popular your house is, there is no need to consider about where your house and what the price for your house. &#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column-instance column='[number_of_reviews]' derivation='Avg' name='[avg:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:number_of_reviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:price:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:number_of_reviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:price:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xx353615o2q5g1byw26f0o8zru8].[Multiple Values]</rows>
        <cols>([federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk] / [federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4A2B662A-5C29-4AB9-9184-8A69912AC680}' />
    </worksheet>
    <worksheet name='price index'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>If the price distribution index is more close to 1, then more room have the price above 100usd.&#10;Comparatively:&#10;1.Manhaton have the most percentage of house above 100USD per night;&#10;2.Entire home/apt have the most percentage price above 100USD.&#10;&#10;So if the investor&apos;s oriented guests are richer group, which has greater burgut on travelling, we can choose manhattan to open the airbnb business do investment.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column caption='price distribution index' datatype='integer' name='[Calculation_452611829024161792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([price]&lt;=100,0,1)' />
            </column>
            <column-instance column='[Calculation_452611829024161792]' derivation='Avg' name='[avg:Calculation_452611829024161792:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk] / [federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk])</rows>
        <cols>[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:Calculation_452611829024161792:qk]</cols>
      </table>
      <simple-id uuid='{2DC29E2D-B645-4BB6-9F62-CB263902DB6D}' />
    </worksheet>
    <worksheet name='price reviewers map'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Map based on average of Longitude and average of Latitude. &#10;Size represent the price index of the room for one night.&#10;Color represent the number of reviewers for each district.&#10;&#10;We can find that Mahatton got the biggest price index and Brooklyn have the most reviewers.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column caption='price distribution index' datatype='integer' name='[Calculation_452611829024161792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([price]&lt;=100,0,1)' />
            </column>
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_452611829024161792]' derivation='Sum' name='[sum:Calculation_452611829024161792:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:longitude:qk]' field-type='quantitative' max='-8163716.6750609484' min='-8279027.2850360386' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:latitude:qk]' field-type='quantitative' max='4997831.0516030872' min='4944938.8856842108' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:number_of_reviews:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:number_of_reviews:qk]' />
              <size column='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Calculation_452611829024161792:qk]' />
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a51231' />
                <format attr='size' value='3.1712706089019775' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:latitude:qk]</rows>
        <cols>[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{8D23FCEE-9ADB-42EB-87A7-CA5DA1EA75F2}' />
    </worksheet>
    <worksheet name='room type and price '>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Room Type and average of Price.  Color shows details about Room Type.  Size shows average of Number Of Reviews.  The marks are labeled by Room Type and average of Price.&#10;Entire home/apt and Private room have the bigger  availability than Shared room and sahred room is cheapest。&#10;The size of the circle represent of the averange of the number_of_reviews.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
          </datasources>
          <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
            <column-instance column='[number_of_reviews]' derivation='Avg' name='[avg:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:number_of_reviews:qk]' />
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]' />
              <text column='[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:price:qk]' />
              <color column='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C826353D-18E8-459E-9321-B97766A0635C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97274' id='1' param='vert' removable='false' type='layout-flow' w='98614' x='693' y='1363'>
            <zone h='5622' id='3' type='title' w='98614' x='693' y='1363' />
            <zone h='17206' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98614' x='693' y='6985' />
            <zone h='74446' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98614' x='693' y='24191'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='We can see that most of the Airbnb in New York are located in   Brooklyn and in Manhattan &#10;' captured-sheet='distribution of airbnb in NYC ' id='2' />
                  <story-point caption='We can see that Manhattan is where there is  the most   expensive airbnb ' captured-sheet='neighbourhood group and price ' id='3' />
                  <story-point caption='Entire home apartment are on average the more expensive, even if it is not a surprise, there is a big difference between the price of a private room and Entire home/apt, but almost no difference in term of availability ' captured-sheet='room type and price ' id='4' />
                  <story-point caption='From now we are going t work with the calculated field that we have created, which concerned the budget. As we ca see New is available to everbody since a majority of the airbnb are part of what we judgest Regular budget ' captured-sheet='budget ' id='5' />
                  <story-point caption='This show in which neighborhood you should look for an airnb based of the number of calculated host and also some essential words presents in the name of the airnb ' captured-sheet='neighbourhood parameter' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{42EB52B9-6A26-428D-A854-8B7EA91E64CB}' />
    </dashboard>
    <dashboard name='dashboard where to stay '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='AB_NYC_2019 (airbnb hw)' name='federated.0xx353615o2q5g1byw26f0o8zru8' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Name Parameter' datatype='string' name='[Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quiet&quot;'>
          <calculation class='tableau' formula='&quot;Quiet&quot;' />
          <members>
            <member value='&quot;Quiet&quot;' />
            <member value='&quot;Chic&quot;' />
            <member value='&quot;sunny &quot;' />
            <member value='&quot;cozy &quot;' />
            <member value='&quot;clean &quot;' />
            <member value='&quot;central park&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0xx353615o2q5g1byw26f0o8zru8'>
        <column caption='budget' datatype='string' name='[Calculation_3269402289414258689]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [price]&lt;=80&#10;THEN LOWER(&apos;small  budget&apos;)&#10;ELSEIF [price]&gt;80 AND [price]&lt;=200&#10;THEN LOWER(&apos;Regular budget budget&apos;)&#10;ELSEIF [price]&gt;200&#10;THEN LOWER(&apos;Luxurious budget&apos;)&#10;END' />
        </column>
        <column-instance column='[Calculation_3269402289414258689]' derivation='None' name='[none:Calculation_3269402289414258689:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='28750' id='5' name='distribution of airbnb in NYC ' w='40500' x='0' y='0' />
        <zone h='14750' id='6' name='distribution of airbnb in NYC ' pane-specification-id='2' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='size' w='14000' x='33300' y='0' />
        <zone h='35875' id='7' name='neighbourhood group and price ' w='41400' x='100' y='36125' />
        <zone h='33375' id='8' name='neighbourhood parameter' w='33300' x='66500' y='125' />
        <zone h='12500' id='9' name='neighbourhood parameter' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]' type='filter' w='16000' x='48500' y='8625' />
        <zone h='5500' id='10' mode='compact' param='[Parameters].[Name Parameter]' type='paramctrl' w='16000' x='49000' y='2000' />
        <zone h='37375' id='11' name='budget ' w='47500' x='42400' y='34125' />
        <zone h='10625' id='12' name='budget ' pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='color' w='14000' x='84000' y='40375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='230' h='28750' id='5' is-fixed='true' name='distribution of airbnb in NYC ' w='40500' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14750' id='6' name='distribution of airbnb in NYC ' pane-specification-id='2' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='size' w='14000' x='33300' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12500' id='9' mode='checkdropdown' name='neighbourhood parameter' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]' type='filter' w='16000' x='48500' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33375' id='8' is-fixed='true' name='neighbourhood parameter' w='33300' x='66500' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='10' mode='compact' param='[Parameters].[Name Parameter]' type='paramctrl' w='16000' x='49000' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37375' id='11' is-fixed='true' name='budget ' w='47500' x='42400' y='34125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='12' name='budget ' pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='color' w='14000' x='84000' y='40375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35875' id='7' is-fixed='true' name='neighbourhood group and price ' w='41400' x='100' y='36125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F033119C-A52F-41BD-AE0A-BA4993E5A72C}' />
    </dashboard>
    <dashboard name='story2'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='30500' id='3' name='popularity' w='33000' x='400' y='-2625' />
        <zone h='44875' id='4' name='price index' w='33300' x='600' y='28000' />
        <zone h='27875' id='5' name='oposite-rela' w='29500' x='69700' y='44625' />
        <zone h='6625' id='6' name='oposite-rela' pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]' type='color' w='17600' x='23000' y='27500' />
        <zone h='31750' id='7' name='price reviewers map' w='30600' x='36800' y='40000' />
        <zone h='46000' id='8' name='flexibility' w='64800' x='35300' y='250' />
        <zone h='16000' id='9' name='flexibility' pane-specification-id='1' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' type='color' w='19900' x='86600' y='24500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='244' h='30500' id='3' is-fixed='true' name='popularity' w='33000' x='400' y='-2625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='8' is-fixed='true' name='flexibility' w='64800' x='35300' y='250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16000' id='9' name='flexibility' pane-specification-id='1' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' type='color' w='19900' x='86600' y='24500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44875' id='4' is-fixed='true' name='price index' w='33300' x='600' y='28000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='31750' id='7' is-fixed='true' name='price reviewers map' w='30600' x='36800' y='40000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='27875' id='5' is-fixed='true' name='oposite-rela' w='29500' x='69700' y='44625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6625' id='6' name='oposite-rela' pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]' type='color' w='17600' x='23000' y='27500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E52A5238-C1B9-4A1A-AAB8-3C67F3BA9BEA}' />
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='distribution of airbnb in NYC '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[Neighbourhood (group)]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6ED0912-276B-4561-9532-E6D1C4309E08}' />
    </window>
    <window class='worksheet' name='neighbourhood group and price '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AF9E970-B8FF-4547-A894-279D50CC3FD8}' />
    </window>
    <window class='worksheet' name='room type and price '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Name Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FC34AFF-CA64-4D80-A9D4-B5E1FD682858}' />
    </window>
    <window class='worksheet' name='budget '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]</field>
                  <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>2673</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58891640-CAF7-4E32-AF9B-B00833EE8FAE}' />
    </window>
    <window class='worksheet' name='neighbourhood parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Name Parameter]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:Calculation_3269402289414258689:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C0F1ABA-821C-4E0C-A981-B09A5B5F745C}' />
    </window>
    <window class='worksheet' name='oposite-rela'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='98'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A64250E-3232-4C4C-9935-242C0DD1AA3B}' />
    </window>
    <window class='worksheet' name='flexibility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='100'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[Neighbourhood (group)]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F86BA31-84EB-4F17-A06B-3F805850E325}' />
    </window>
    <window class='worksheet' name='price reviewers map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:number_of_reviews:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Calculation_452611829024161792:qk]' type='size' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[Neighbourhood (group)]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:number_of_reviews:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC2B1DB7-832B-4343-B29C-5B11DDC88B46}' />
    </window>
    <window class='worksheet' name='price index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0xx353615o2q5g1byw26f0o8zru8].[avg:Calculation_452611829024161792:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78563356-DC3E-4533-8B97-08E268B4DC93}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{529FA596-FF7C-4589-8D0E-36E97798A818}' />
    </window>
    <window class='worksheet' name='popularity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='98'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]</field>
            <field>[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8C0D7FB-D064-4998-B0EA-83DBEED5E105}' />
    </window>
    <window class='dashboard' maximized='true' name='dashboard where to stay '>
      <viewpoints>
        <viewpoint name='budget ' />
        <viewpoint name='distribution of airbnb in NYC '>
          <zoom type='entire-view' />
          <highlight field='[federated.0xx353615o2q5g1byw26f0o8zru8].[sum:Number of Records:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='neighbourhood group and price '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='neighbourhood parameter'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F7790941-88AB-4B71-88AF-9C5DEBD43C13}' />
    </window>
    <window class='dashboard' name='story2'>
      <viewpoints>
        <viewpoint name='flexibility'>
          <highlight field='[federated.0xx353615o2q5g1byw26f0o8zru8].[none:neighbourhood_group:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='oposite-rela'>
          <zoom type='entire-view' />
          <highlight field='[federated.0xx353615o2q5g1byw26f0o8zru8].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='popularity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price index' />
        <viewpoint name='price reviewers map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FB8A0196-7200-4F1E-AD67-F7C4240A5AA3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='budget ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='dashboard where to stay ' width='192'>
      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
      ZnF2komJKSRBYGn2JqnECqGWDpbmklu2y9AqxNt7kASLTDrFpXNfglVldmGeXHKeUEsH8zMr
      5PP5O9+kIKCEQ8zenCYiW7T0D3D58gSqIJFJLDK7nLrjKcRAE7v7WynmisRjIbLFPKnVAs0t
      EeYX0izMLdIS9FO8v8RajwfgvucAAKViCcPQkWSZxOoykWgUvxKiVCgRVPwUCll0ZCS9gqwE
      0XWdTK5Id1c7ggVB1V1hzmJyfIyWjh4CPplcJoEcjJJNLNHS3o1g6RhIzN2cYNee3WgGYEIw
      uHVMYm56igoyfnQisWZWl1dpiqqIso9gKEI5nyNf0ejr7rztPZaLOWYXV+nq7CSkKkyNT9La
      1YUEGFZNYsOh0G3PYRpVxiemGRwaYGU1QaWYp72zh0w2B1oZJRwjpPiQlCDybTp9bw6wfdhz
      gAdSAI9Hi6cA24etAM9cLtCTyvzsHEHFh0/xsbJURlYE2uIRUtkCIUVidmGVA/u9N/Q8ajwF
      eESUSiWyqQRNrU2sLufIFFNUB3sxdY10ysIv3Xk6Fnjr1/AdOvwIWvvsIw8OQXuLZwI9KpKJ
      JOVSHtHnp5irkCsWGBzsw9A0ctkkghSkv997L8OjxlMAj4bGi7R4NDSeAng0NJ4CeDQ0ngJ4
      NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4C
      eDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSe
      Ang0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0
      ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0NJ4CeDQ0ngJ4NDSeAng0
      NJ4CeDQ0/z9lW5xgw6MOrgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='distribution of airbnb in NYC ' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='139' name='flexibility' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='neighbourhood group and price ' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='neighbourhood parameter' width='192'>
      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
      D7Qo8Z4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='oposite-rela' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='popularity' width='192'>
      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
      Bx+Xc+z/P94avnCD7VIcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='price index' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='price reviewers map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='room type and price ' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='story2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d5Rk152Y971UOVdX5zyxewIwMwgEQWIAAgTATIqURYsKXtlHx8f2sWT/
      YUv27p7j1dqW5LOrlWTvWUk+u5a85q7XjMslCIAIBAgQHKQZAJNDT/d0qO6unF9VveA/al5N
      VXd1T8fpmen6zvSZ7hfuva/q/t79pXuvYJqm+drrr/C5p57hhZ+9hCjqPP/cF/n5Sy8i2WQ+
      9+RJXnjxlzgcBicfOcRb5xJU04v0d3m5vpBicT5JR8TLF7/wJebPvksiNM7cpVM8+9TTvP7i
      T0hWBZ577ot4bCJt2txtiACZ5CIv/eyndPUNYJdkfvqXf0nv3iNMXrvMX/7whzzw0AkK+Qwv
      v/4Ofq+PYDCArmsIhonHH6SnuxsBsLm9uG0SYrHIucvXeOLJzzJ7Pdru/G3uWgTTNM0PT3/A
      8WMnlp1c6fha+fBXb+LpPcj+4c7NtLFNm21DME3T3OlG3O98+O6v6O4axtUZIeBUlp3P5/JI
      epWK3YvfKWMaGoWSRqmUoSMUplDS8LgdO9Dy+5+2brLNpKOXODedppKcZCZVJrYwy9TsPPlc
      DsOEfD5PPBojNXOF989fYX4xCXqZWDrLJ598AnqZhXicH3/vR8TiSfL5PACFQmGHn+z+oC0A
      20yxqGLqVaqagVnJ8uqbp7nw/ptEEzH+9N//n7xz+hKXr19HECGXzfPaSz+lpGaZml0AwChn
      mZqOkkwmyRWKvPjCi1SKCd5464MdfrL7g7tWAAzDAEDXNEwTtKq2wpUmlUq15ZlqtXbcNI3t
      aOKa6OruZGh4Dx6nDU3NMTkziejwEgx0kFmYp6uzC1EADNh7YIzOjiAGICDUChBAsjkZGuhn
      dKifx4/v5X//t3/BY098esee6X5C3ukGWPxff/j7BHsPMTY+QBUb1UySXDZHSS2iyi5koUzI
      HyHgUjBsDgI+P4VkgmiuzAdv/IKvfevrzCUydDhFDLuXQnyK2aRIb1ggndXYMzaGml1gbmaB
      kf2HcTtkstk46bzJow8d2bbnEhQPQ30yHqVCnzPCZ0+MkytqLERn+bv/4B8xdeU8o3tG8Phs
      fPD+rwiG+nDZa/eYFVf9/qKzyvunz/HQsQcIBT8i6Lxrvrp7mrvGCH73rTd44eU3OXBgiO6+
      veip62QFP/HZBY6cOESmqkMuh+y0YVYySIqP1NQNBh7/PJd++mckOw8w3ukCWYRqHs30IJgS
      iphHUQvE5U6O9jtZrCq888vzHBsfQnbYKFcyfP6ZZ3f68dfMlfOncXYM0d8Z2umm3BfcNQKQ
      zWTIFYo4ZMiUdIJeB2+8+jL9+0+wb6SHUj5LsWriFg10u5vUwjSRzh7cgQ4K8TlEm4t4JkfQ
      LqLbPeRiUYLd/YQ8dk6fvcSePaMEA14+Of0RwyODTEwvkEsuMLR3jMG+rp1+/DY7xKYEoFwu
      Y7fb78h992tdbXaWTRnBlUply+/TdR0Aw9DXfI/JyjJs3WcZ1Wtt30beCxv9PNrsHFtmSd2Y
      usbc1DRDB8cxqhXiiRRdHWHShRLhgB9RFAiHw7WL9Tyvv3KGcIcXmzeI3Szj9gdZmJtDV5z0
      R0JUKyp2h5tSPkMyV2RgcIAPT73N3oMH+ej8dQYiXuxOH/FUinB3B1ShUkhRVUtU3F0cGump
      t21+Zop0roQkyfT2Rkjny6hqGTsaitPOwkKczs5eiuUSo0MDYJT5xSsfMtjrR3V14daz9XId
      1RRuT4hYMsn4oXEmr15lz769W/UxtrnDbJ0bVBBwOWzMLeQwiiWG+kKcm4rj8zqITl0gXxaa
      LpcUG+VsHFcggo7A3MWPCA8OEZ2a5vr0LIIgMjN5kcW4Sthpo2hA90AfH3xwgd4OH7lckRsT
      M4SdNpzBEKV8ilyuiJrLEYpEMHS9PpqU1Aoje0bIx6KkE3HOXZ2iVCwwE50jl5zDHe5ibjpW
      DzKZpsSBgyPksmlCkdCtcsNe5qJporPz9TZBbdSy6mpzb7EpGyCXy+H1egEo5DMsxDP09XRh
      t8lcm5imt7cLURLrPny32127L5tmcSFGpKsLh9tLanEWl6+DxPwcHT09YOgoisLEtWvs2bMH
      0zAoVjVcDhuVchVZkogtzuMPduCwyYgOB1pJJbY4T0dnJ+lsgYDPiW5KYOh43S4uX7qAL9JL
      PpWkq6uTZLaA2yYgygpOtxc1nyNfrjLQ211vX//QEIlkGk0t1MulquLwBHA7FCSHk2qphGZW
      EQwJE6P+ebS5N9i0AGyEYrGIy+Xa9nvudF1AWwDuMdZkA1y/ehmHy0MslqCvv5f5xQRjB/Zi
      GEb9rb4edF3H6XRu6T3VqSmMQrHpmDI8hG63b3ldK1EqlZYdKxaL264ebYX3yTAMRHHzGvFW
      lLNVbVkLaxIAu01mZmqOow8f4PVXP+ahA70UTBFRFJHl9dvRkiSt+77b3ZP4f75L+fyFpmOd
      v/2bSAMDW17Xemg1kph6havXZxgZHUEWIZ8r4vHeepHouo4kSWuu4/sf/TkvT/x0S9oLMND5
      n67r+t75Bb7x4murXiN783jHJ1a95geFJ/hB8Yl11W3xu//Z5zgyWku7//5Hf873P/rzltct
      fbY1fMsmMzPz9Pf38smZS+zZ28dUMs2DQ1C8/c1tWqCX0iDbeOuXbzE0OoqRT5Pzh0CWSSaT
      FBIpIj1dlHWTkYibs9MpFK2Aw+kmXyxgd/lQc1mcHj/jY20P1GZYgwAIPPLpWuJV7+Dw9rZm
      F6Gh0NfXy8hAH9GZKhcuTRDyKUQTJYa7QywuRjFkJwNegb7hQabPnaeQi+HxucgUynQF/Did
      61c/2zTTzqjaAWRPJ2MegFoKRk//MN19Q2CaPCAImKaJKAgYJoiigBuIPHwcSRLRdQNJataP
      O9ydjHUd3lSbTNNEEGqu6s5geF33diBiHx9bVk4jkquE1L96uV3qPg6rnSuWsRpux62JRqt9
      Hkufbd0CYJpm7Qu6Q0bKbkEQBLj5pVtfvtjQB6xOv7TzA5zc+zm+fOxrm6pf07TN2T3Pf2nT
      5Tx/82ezbTm593Oc3Pu5NV1721r0qsqp988RCdopmzYko0y5KvDgg5t74+x2FqKzKDYbNlcA
      T4tpktAcZ1mNVkawXemmM/ilTbXx4TOf8MiZs2u+3tG3gLN/YcP1/a3Yb677nm8/fZj/+Onm
      vrjUCF7ts7itAEiKg85QkJ6+CGfPXcAfDOC1iRiGgWEYaNpKE1VWRtf1dd93u3tahTMM3diW
      uraCdC5P2GXy7vlr7Bno56MLlziyf4BKpcrEzCJj+waYm89w/GA/lxfyUMricnvIF/LYHW6K
      uSxOT6BtBG+S2wpAtVwE2SRfKNLTP0DI46BYralAd5MbtJXOKErittS1FdgkkUyuxMGD+5md
      mKYzFERyuAm7BaqCgl7VcbtcYBj0DQwwe/E8VVVFBEzZRk9PD3Z7e6L8Zln2LZ86dYoLFy7w
      ne98B0VRUOwu9u7Z03SN54417/5lZM+++u+9kebJLR3dzdc6gPDxB1csa6zr8DJVSRI9uJ37
      VrhjOa2CT32eAP69B9ZchuzNI3pyG7YPv108vGJbVuLwyPIld8a6DvPNB75d/3u1z2KZANhs
      NnRd3/Y34Gos/M4/WXbM9d/8wx1oyb1BxNO5gq3Qeq50I6JgQ1FCGLqBuNTADoWJ3/TuWHQk
      09hXSfs2dANTEpFcJQRp5RT0omlnSmuWdEuTNwwdUWwdCOwMuukKru7+jXg6G0qzaP1ZLOvl
      gUAAm81GtVrFZrOtWtF2sTSiC7CxzJztIf/GG+ixeNMx98knwNFaJbl25TK+UIRIOIim5qnK
      LvRSqSn6m05lCAT9K9ZZKaTIag46/FaKhkGpWMHpcvDmtdc2HAler7H89RdfpW9+8bbXecau
      ofhWXrrlYmWI/znzt9dcr0Uro3cpb157bcVI8FKaBCCbzXL16lXC4XB9BDCqZS5fn6E77GMh
      mSPgtlGqwvBQ/7obf79QeOPNZUJqHx+DgYGW1ydiCTzBIO+/8w7VQhb3yBE6hDjvnTMxMrP0
      jBzEbla5cnUCRdRQXB5KiRiFcgXBFSaXTXJo3x4MbY7z54soRhGvP4iqijz0UNsbtxmaBMDn
      8xEMBrl8+XLdqyLINmRTIJXKIRsG6WIJmyDdF14gPRYn/8YbTcfkSATzxPEN1bUSLrcLQRAZ
      2XuAXHyOiiJik5wc2NdPatagsyOMoGs43SrZbArZYad73z6K+RLxokZn2IeJiWZAKOAjFy8Q
      CHWSS2VWrLPN2mgSgEqlgt/vZ2hoqH5Mq5QoVUqEgn5yxUptBKhwX3iBtFSSwo9+3HTMPj6G
      65GHN1TXSjmfhx94oP57uG7w1vTf3vCxpmt76bt1bRcMAKZeJls08Htr6k8u34vX44XeWhmt
      jOC1YhmIazU8+59X8OVXVm2scmwdSUT7yjZIn+7n2+XWo9dqbWll9C5lqRG8Gk3fsizLZDIZ
      zpw5w6OPPgqAYndx5MihNRW2lMz3vk/me99vOub/1jcRn7t3liHZLFuVDi3SPP+i8fdh3yjj
      3ZtThdbseenqvV1BiKLI7cZ3H/DlDbbldvNQBtxDDIwOrXqNxbIRoFqt8hu/8Rs76gW6n9jo
      xJr1stmJOLt1PkBTLQ6Hg8cee+yOfWltto71rHqx2n0bLQfANAwQhC1pi2kYGJtYsmqtbWgn
      w90HZBejXM3l6erbT29kHWFKU+fqxQtks0Ukh4yqCoiCycOPHl/XagmFTIL3zk3Q5XNQMQSM
      cgl3IML+fcNrLiMeneHS5Bw9HUFiyRxet0LVkHjg6Pg6WlIjuxjl2lx0TZ/HmgXgysWz7WS4
      u5SyWqa/v4dc6faBr6Xk8hUGejsRXXbOfDTLcK9v3WXMzs2DXkG2BRH1CpIzgq6try2FbJau
      sJPJRJkBv6cWTFvFs7Ya6/k81iwAvf1D606GazUMGYaBeZe4QVu5Lk3T3HBdO0VkcIh4LMHI
      aM/tL27ENPEFfdj9YVKJOE8+PsZ8Ir/utXL2jx2iv1SiWiqgCTYqhTSByMi6yhjaf4CrV6f4
      zINdLCTy+JwSmrCxQGxkcIjrE5Nr+jzWLACmoa87Ga6VmiSKIuLd4gZtkVsvCMKG69q5lYEE
      RkbX1+EAEGX23VzUK+CvGdEDfRubZeZyOsFaSCC4/lEEQWLvvtFNtaGhsDV/HmvuhR5fAI8v
      UPt9Y63aMdTz55cdc4yvrluq58+3jPbe7r429xab9nWq58+z+Du/23TMPj5G12//1qr3pf79
      f6AyNdV0LPh3/ja24eEV7zEKhWX3iC7XqvcAy9oHMPjn3131nvL5Cy1jGLtBAFabktjqnGEY
      GLqBrMjomoYoyZimUU+wW6oJmIaBIIrL3J2JRIJEIgHA/v37t/ipWrNjzv7K1NSyN6xRXH2d
      icrU1IaErc36ePUnf4Grax8jQ32kEymm5hZ49vMnEYEff/ffMHLiWToDbhaji6i6hixJqGoO
      1CKGKZLWoTMUQavkcdgdnP7wQz7z5NO47DIBl8Jf/MUP6RrsR3EEUOPT9I8d56GjB0kkEly+
      fPmOdX64i7dIarNTGMzG88xHp/nBd/+Ui5PXKWVKZDJZTF0lWZCYvHqFH3z3T0kUc5w7dw69
      mIdqgYXoHFcm0vQ4BCbm4oiCiF5SGRgeJj59jWtT00iyQsjnYXoxSzK1wP6xMS6f/aRee39/
      /x0VgA2PAJYXqORw1FMbrOHRiHSQzWapDPQjPvds07BZGejHKBYxjh9DHBhoOldyOKhks8vK
      g1pKgW2FunK53MrlFYsty8tms+grlFcsFhFXaHs2m12xrvshdm7qGl/91rcRtCqlh09gV0y+
      98KbVLUKhibxre/8XfRKAfXYIeyKSF9XNz2RMCYGPu91OnsGWIzH+dLRXkxBQDBNMqk4i7PT
      jI4dQzeKDI4/wPN7B5mcT+KWDT77uacACIfD9Pff2SzjLVscdymrrW62kfvWOkF8rfdtdfs2
      08bNslP13g9suQpk7V+7tJMUi8UVw9ONe94uvW+1/XBXOreWe1p14pXua2z7etrX5u6nbQPc
      B7Tf/htnywRgfn6ed999d9k2QeVymUuXLqGq6jJ3WLFY5NKlS1y7dm1ZeTdu3OD69estV59e
      qa6FhQUuXLjQ8p5UKsXHH39MPB5fdu7KlSvMzc0tu0/Xdaampjhz5syye1arq829w5YJQDQa
      JRKJ4GgxL9ZmsxGPx5epQMVikWKxSFfX8l0aZVmmWq2STqfXXJeiKEiSxPz8/LJ7kskkiqLg
      9y+fdyvLMvl8ftny5oZhEI1GGRgYWOb7Xq2uNvcO22YEL6VUKmG32xFFcV33WZtVbOSe9bbx
      TtbV5u5gy0YATdNIp9P1SF4jyWSSaDRKJrN8Dms+n2dubm5ZgplpmkxOThKNRpeNHKvVFY1G
      mZ+fp7gkqGaaJul0moWF5Uv35fN5pqenSSaTy86pqko0Gm25A+RKdbW5d9gyAVhYWKBarXLl
      ypVl54rFIuVyuWUnmp+fJ5vNMjs723TcNE1UVUXX9WWeltvVBcunzZmmSSwWY2ZmZtk5VVUx
      DINsNrusvGg0SjabJRqNrrmuNvcOWyYA4XCYubk5Tpw4seyc1+vF4/EQiUSWN0AUCYVCdHc3
      L5IkCEL9nqVqxe3qcrlcy+wKQRAolUocOHAAj6c5nc/j8SBJUtNiAI3lSZJEX19fy3Ot6mpz
      77ClblCfz7eiX3wlU8PtdpPP51umHxuGseJ9K9VlzVhrRSAQIJvNtkz0Mgyj5XFFUVY8t1pd
      be4NtkwAUqlU3dBtpFwuMzMzQzqdXtaJCoUC5XK5ZSeanJwkFou1XJ1upbpisRjZbLalSpJK
      pSgUCi3nO09MTJBIJFCU5mXKNU0jm82iadqytq9WV5t7hy1NX2n1lrTb7fT395NIJFqm0q6U
      djs4OIggCCvOzGp1X0dHB6ZptrQ1VmN0dJS5uTk0TVsmBCu1b6N1tbm72JQbdKM7eWzkvvu1
      rjY7y6YE4N7B4Ffv/Jr+iB/RP0T/GlZOMCo53vn4OsNdQfpWWPOzzb3PLnldmXz09ntID+3h
      gxfeI1nO8/iRAeaLJnOXLjJ6+GECbpnY7ASizcbFGyn+0X/xTd54/S2Exx7gnTdexN3Vw8TH
      N8Ap4wsFKJWr6PFZvvEb/yXdoXY6xL3KLhkBdN595eeUXW4SURV/lxfUFIrTSzWzSKLiRtMr
      7Bvuw6MIzGXLPHFiH2cuTjMdXUDSS3RGAiimm6ogkSwXCXm96JkovsFDHN7THiHuVVYRAIOr
      FybZOzba8mw+Nk8ODz1L1Am9GOPMRJoTh9e+O0mbNjuFYJqmaagpvvuDl1FkkacePca7l64x
      NLQXyhUkUWVico4HDx/l3dOn8YdCPH3yM6RnrpFz9XH6jb+kqsPxx55m/upHJFILeHuPUJyf
      QDXhyU8f48ZiFTUb5dHHHt+5J71yFvI3I70eH+w7fGsJ+HXuSbseTNPc0c1G2qyODGDqKgN7
      D7PPnePDC9dRAv0cOTDMKy+/haoW+PJXv8Q7r/4Y7E4uXpvg6ZOfoZROkBG78ARCnHzkEG+d
      m6VUrPKFzz/Ja2+f5tyNeXrckBY7eOfl3+PYF/6TnX3SfBbSzblDb/7yF+imydDgHirFDJNT
      03zqs08S9Lr5X//Z7/CFZ57l9NnzHDx4hGQyTqSnF6FSJJ5M093TSSTSQ2xhnpnZKLIs8dxz
      z/F7v/dPeeDhxwi7Xei6hsPl5L13PyTSEcIV7IJynk995iQep32Fhra5k9QDYR+ffo/X3j3H
      SKeHvsFbKQEupcLLP38Zh6+HalVjbN9Kqo1Iav4Gr7/5Doqni7DXSWffEGJ+muGjT3Llw3e2
      +1nWzfTkNSam5vj1Wy9x5txFfEEv0YWakIz2d3Pq3BVMrcjly1cJhwPMp7Kkkgl8Pi/Xrl1m
      cvI675z6NYWqjt3ro2IYHBob49T7H5KILzI9N8/MzHUeOPYgs9F5+oeGyObSLVO82+wMgmma
      pl6I8ubHcU4+ehhRXK4OWP5tTdMQRanlNVDb3Ew3TBRZxjB0DBPkFebP3nFaqEDxm9mkZVUl
      GPDxr//Vv+Jrf+NvcnB0hHQ6RaVSxtB1EBVcTgcV3UA0dSRJRtN1Jq5eobe/H8Vmr8018PnI
      ZbPkC3mcDgevvPQCXQMjHHvgASpllVg8QTaT4YFjx3HYWm+O3ebOsku8QG3atGaXxAHg4//h
      X5I5W0uf9h/ex9H/5R9syAiuVCooirLsHmsXmEpZRTcFPO72Hgv3ArtGADJnrxB/+3TTsdWM
      4H/2z3+X/YdO8MixB1FVlRvXL6NWdCqVMorTzcjwIGqpTHxxjkc/9QQvv/RXaKZALrnI81/5
      Jj/9q+8hym66wgEUl4/B3k4WEnEEA2R0ApFuwEG5msHlCtLb1bEzH8wuZ9cIQCumJ6+h4iB6
      4yqiPcDgQDfRhQRBr5tjRw/x87feIRwMkkqncIo6Pn+AN974Jc8/+xQ/fuEFjo4fQSsV8Xnd
      OFxuBEx6Og8w0NtDOhnHExb55GKCvp4w7330MUf3D3L54kXGjxzh2rvnkCSN8YMjpNVMWwB2
      iF1jA7RSgepGcLlMKBjgT/74j3n+S19mdHiYdDpFsVhCLRUwRRtBvwdJkkmnU6QyOfq7O4mn
      M3R2hAmFwtyYuo5mioQCPgKBIOl0inK5Qjy2QHffIGW1gMvpIpmIY3O4USsVXDY7gqBjc7oJ
      B4M7+fHsWnaNALRp04r2wlhtdjUysOKE9Ta3x+l0tucA3MPcsypQamIC8cPTt7/wJo7HH8fe
      0337C2+y1skt7bWA7m2avuEPTv2a3uE9ZGLzeFwy8yUHvSEb+WwRp13G7g3QGV67sXbhk48x
      ZRcDvSEMU6KsGdgEDR0Rt9uNICnYlY1FirVYjNKSHVxWQ96/n6xokM6pmGqBoqGRn5qk/7Hn
      KC9MUMHBkUN7N9SWNvcuTTaAKAiIook/EKGUyxEMdlAoFFAkB7PROQr5/LoKLxaLZLNZzl28
      xOxclFRsnmQqTyoR59WXX0GW72yaRKSrF8UmUDWKOBxduPcdY7jDhc/tYiF24462pc3dQdMI
      0Nvfi4lIKBIgEPKTSKYI9/UjijJen4JoW9/Mp3BHGE20EfJ70SolcqpGJBSiXMpx+OgRSmUN
      j+PO6c+x+VkWFtNQ0gm7q4x3u0llMlRNE78rcMfa0ebuYV02wGqbp91pMvPz2FssZbgSYn8/
      Nt/at+9s2wC7g6Zv+PqVKwQ6uynmUnREuonHYwiCiNtlQ5BdJBbnsSsS4UgX84sxTE3FG+wk
      vJF9YTeJUSwu22Rv1evPnqPUYt9iKdKB5+TJrWxam3uI5lecIBObPIfhHmDyrXfwdXZg2hRm
      puK4/EHcDgfpVIL4zCSegRGu3EjzzHDrKZPQ2ghWqCC7PJQyRZK5LMODfQiCQCqxiDfUhdux
      tplT6zWCV8I+Pobn5BP86lfvcPjAXn7x5q/o6+8lmi/x5adOcunsJ+TLZU6ceGjTdbW5+2gS
      gI7ODqpVD4sL8wwdGMPpVDAFk7LDRjqTJtSzh4VJFW9AYGo+w7FDQ8STGbo6WnuGisUiVTTO
      ZWP4vEEkwcRAQCTGxIUpBg8f4MbkDRAl9KpK1TBx9w/ekQdvRqC3vwdfuJNwJIJcqZBazGMA
      bpfC1PzyVajb3B80CYDX5wW8hMJLFrENhYhUKthsNvxjY5iGTi8i0goTYyxaGcGyqSE7Azz0
      qSA5TaDDUWG24KCrI4iyU5NETJ3F2Xlcbi8jQ3tBTdNnKmQyGTI5lYGB5Qvjtrk/2PFAWOWm
      YK2X9RrB1q7lS1lpp/m2Ebw72PEY/kZXS1i3EWwYy/Yosyi9/0H997ZRvLvYVgH44N0PODI+
      ysRCHpdi0tkZIZ5IoRZzePwdCLqK0+UmupDArJTpGeilooNiVjFlB0H/ym/WrTKCl2IfH8Pz
      xOOcPvVrgv2DXDp/gb0dXcyXcpx84rNcPvsJRdPkwSNHt6zOiQtXGR7bu6HMRKOS5/pCnj0D
      a0/zaHOLbRUAp1jhg/Nz9EXsxGZnuDQdZyDgpSJoGKk0hl5kIZEk6I2AzUYmlWZmPkF3RwjD
      SK8qANuKIFEoZjFmZrg8G6evu5eFhRQ63Iwib3wluF/98nVSqQydQ3uRyhmuTsc4uG8/gl7h
      hz95ge7uYaRqhmgizqeeeI6ukIe333yZWEGi1yMTTcR59PGTzMwusr/byUIBNGTe/eUbRBNx
      jh8/Tross3jlQx5+5itMnv8YNWeV93k+evvniMEBtOQchjvEF59+gvTMNV789VmqpRx+r509
      Rz5FbuE60zOLPPvVr/Lz7/9/6JLC57/ydULu+2t9o21Nh+4ZPUBfrw+v24XD38HoYB9d3WF6
      u3vo6AgiyQodHREq1SKmUcGUJDrCISKdHYTC4e1s2uroZcpVJ8P7DvDtrz5Lf0+EvXsGyGYy
      5DM6slTdcNGqpvOlr36d2NwsF89d5hvf+BqL8/PMnH2f0QdP8tinHuTDT97H6bRz+uxFAC7f
      mOdrX3i6fvzMhUmiM9c4dfoc/Z0OFhOZ+rlzkzGmLn6CVi3w69d+TqwgNZR3gWiswDOfeZhK
      pYx804lRSic4/Omn6evv5qtf/QJzM3PoVRWbkeLStUUCkX6++aXPcPqTi1vy8d5NbOsIEAyF
      CIZCtd87e5edD4VDGy7bNjSE97d/c83Xr2QEL0V0uUBy8PSzn20ygjtubuH06Gc/vf7GNpBJ
      LvDKyy8i2d10DQyh3OyEkaFRXvurF1FjY3R19aEoLob31tZnGurrRYCm44krWS4nK9hEAKHh
      3AinXztDz0Nf5PX/94/5+//4N8nOn6vfp1RUwMTrCzBx9Srqyc8iLPlYBAyuXZkk6JXAFLh8
      /iOS8RkefebLm3r2u5Ed9wJtlPWmQzcawfbxMRzj46tev11eoNdef5UnPnuy9R9Hi30AAB9K
      SURBVJZQug6iiChAtbp8sw4w68dN08QwTaS6YW+ucE/rc7qmYSKsmJCoVasIkoQkmrzy8zd5
      6nMnkdbwArnX2FYBuHr5IoWyzsH9exEEkUwygS/cQWxhkY6Qn1S2gCzoeAIdOO3riwHETp2i
      9C/+5Yba5f/WN3F84RkW5mZxuD1MLmZQ1DxlwcWxw8OcvXKDBw6Ptd2gu4BtVYFMFDw2mevT
      M3idLm5MXqX88Rns3gDJbASnpFMpFzElJ077nc3GtLv99HTl+NkrH6B5PYxHAgwdOITdKRMO
      3X4DjTb3B9sqAC6nzHQ0zmBvhLKm093djcvlIpku0NndiWBUKRYySNKdzzAt5dJcnkzw1b/2
      NaKLMbRqhaBcIbqQIjo7T7ijF+82THUsl8tbXub9jKIoK8ZvtoJ71gbYTCRYjkSQW+xZ3Mh2
      2QAzMzNNf0uSVE8xt9LNTdOsrzQniuKyDiAIQtM91n2NqeqGYSBJErIsI4oixWKxZjcYBlDb
      a1lRFOLxeL0cURSXpbsbhlHfJrbxnNUuRVHw+/1rfv71Ui6Xl+0GupXseCR4o6w3Eizv339b
      w/dOYHVwSZLq+yBbx6C2abeiKCQSCXRdX9b5Gju+9b8oivWObZVlt9ux2WyUy2VKpVJTGyRJ
      wm63Nx1f2sFXOm79bglGKLRxT96dw+D65Rt09XXidLtofMptFYBL58/h8gVIptMMdkcwBJmZ
      aJTh/m4E2Uk+nSDU1UtyYR6nQ0FxKMQWVGSHQCToJZUt4HZIzETjjI8daCp7vZFg99e/hrxn
      kLNXbtAdcPHuJ9d48GA/GdNBJyJXr3/M0Se/TMC+vZ6O23U0VVVRVRVBEBBFsWkP5aVvfks4
      lk5UcjgcSJJENptddp8gCNhsNkRRpFqtrjrBaelG4I3X2mw2fD7ftqonq1FV87z8ymsM7TuE
      XzE5f+UyA6OH6fSYvHXqDI898SSF2CwXJ6Z5/KnPIdplvvtv/4jeIw/xmRNjvPn2KY4/+vj2
      CoDb5aKoqjgUiVQqTaGs41AkLl24hMvvx6U4mbl+A0HQyaYS+Dv8xBdzZIopKsP9GFqVdMrE
      tkXuN7vbTzjkoa+/n865BFXdoJBTKXkFYmkVtayB/c5EOhtVl0asfZGtjmW92Vcrp7EMa0ca
      VVXrKo1Vl3Wt3W6vX9dKAJaOSpYwCoKAYRj1UWqrl4MpFovY7XakNSyp//prb/Dk57/Iqz/7
      GQ6bwtPPfYGfvvATLukm3/jal/nLH7+EWc4wMHYUl2zy3qVr7B87yuPPPMEP/+w/MLhvnJde
      fml7BcAwddxuL2opjywIhNw+VLVAX28vktON2+GkWtUAA7VkQxBthCNgK4p0RDrQq1Vy2SSC
      5NyS9pRyaaKz89gNhQcffojoxDk6/A6Q7US6wvicd0YjtDqSReNb1nrrW2/txs5g6d26rtfP
      txIia2RorK+xU9tsNjRNa1KbWtH4dlcUBY/HU2/PRqfG6rpe1+utZ7DaVSwWqVara7IpnJJE
      Kp2hVC3jsCkU8mlKqoHDrJLJZtFEeOSxzxKb+pj3L9T6j0CVeCqLzeXAFwjx6MMnakbwvbgw
      Vj4WQ47F1ny9EAph7157wpiu62t6EwHrMoKj0WiTMdr4lrY6XOPb1/pbEAQcDkfdi7T0rd4o
      VK3UrMZznZ2dFItF8vl8U70WrYTK6XTicDhWCLStnXw+Tz6frwu3zWbD4/EgCALJZLJej/XZ
      rGgEmzrvnTrF4N4xPjr1Nv6OCGNHHsRmlPjgo3Mcf+hRMvEZJmYTPPrwcbKpDF63jfc/usTD
      x8f54P3TDO8bu3e9QFYk2P+tb67p+vXu4r5dXqC5ubmmN3QrA7cR67zdbqdSqWCaJk6nc5lh
      C6yor8Mto9VmsxEOh0mlUlSr1ZYCsLRMu91OILC5OI3Vtmw229R2t9uN2+1uMuQt+ySTyeD1
      em/rBUqnUwQCG1tcuOkbPv3uKQzFhccmYPeH8bsdGJUyC/EMulEm0tFBLJHl0KGDXL96AUlx
      gyRhlgu4PB7m52OIoszBw+MoonBHFsbyf+ubnH73XYLdfUxfu8LYAw+TS89w6cwMT339abbZ
      pt0Q1pfdqGNLkrTszWsdl2W5bhgDTaN1YxlLPUStaNT/V5sjYdHR0bEuQ9d6rnK5jCiK9ZdI
      qVSqd3bLzpEkCafTuaz8arWKruv1627HRjs/tPACdXd3kUvFqKpFYtkYpYpAtZBDinRRzWXA
      rJIr66iaiV0oQxmQBNLRCZzePhQ04kWdHo/cck6wojgwjAq/fvsdnv/K1iRXzc3OkyjGSMRk
      7HM3CAhFspUcumHCbaZt7iSNrkxgmcolCAKKolAqlequU+t44zWNHb5V57dUJVEUcTqdqKqK
      YZpouoZgCCiy0iQ8jSPSWpfCKZfLGIaBqqr1bWGtnXQstcmKTTgcDnK5HOVyGZvNVjfaK5UK
      Xq+XUqnUUjC2gyYBOHjkaG14DdSGdL1Sxu50MD07T093hFxBxZXO4LaJjA6PUC0XKesiRqWA
      q/OBmrQLJpKt9kXdqYWx9h8coCy6CTlmCAXclMoKkc4Sth2IMN+OpZ3X+hFFEbvdjq7rOBwO
      SqUSDocDTdOWdeqlb8alXqCVVCnLPVqtVhvua77XUs8kSSIUCt3WDjJNk0KhQC6XazLgNU1D
      0zTcbjfVahVJkuqjgiUQpmmSyWTw+/119S6Xy9Xvv50HbCu4Z20AKxK81uDW3WIDRKNR4Nae
      Yo2RYKD+RpRlud5RLVVlLW9E69pG1cgaAQKBAHa7va7/G6aJQLO3p1KtdUSv14vP61sxbmGh
      6zqxWKwuOLIsNxn5DocDj6eWW1UqldA0DY/HQzKZRNO0+vM3trORYDB4P0aCTXTdBMw1e1qW
      osViqD/8ERm+T9dv/1b9uKHrCJLE3ffur7FUZ1/auSz93ur8sFxI1lrP0tQFu91OPp+vu0Gl
      JeoT1ARQN4yb7unm0cUwjPqLwRIayzaRZbluaFtl6rpOPp+nVCrVytX1ugvX6XTWvUGtOv+d
      WoFwe+cEn/o1mmCnI+jA7vBS0U0Us7YwlprOk1DLjA50Iwgii3PThHoGiITW5m1Ymgpx8ZPT
      XJiYpJRV+dwXvkJy4iIzqsrnn/jMXSkMS1MhoPlt3ah/t+oMiqI0CUnjtZa9YLlGLfXH0tHd
      7toarzatgiYrWIqGYRrIUi35zOPxNqk0AOl0GlVVsdlsde+MLMtN7beeaeloZdkIpmmSz+fr
      b/XVnvFOsK1WhnjzoVTNpFAsUi0XKVZ0suk4589dwO20kUsmmVuIIzucVCuFDddlE+GRTz1G
      R1cfF66epX//PoREhtL2q5HrovHtaOX6QHOOz1q00kb1bGlMwPIcmbqOPh+nOjWHmS9RKBSw
      2+21TqxV8H/ya3zTV5bYJeDz+RGE5rZUq1UqlQqiKKJpGslksq6qWYJiXWuNBI3PtXTEq1Qq
      dYFoNSqu9XPYLNs6AvT294HixOdxYVTLtYWxqCI7vQwPjpItqMh6DkUKEnTLa5qyuBKR3n14
      gx5KA/OE+kYpFouE9+3FdZe5QRs9P0u/YOvvxoDYSm/GpYav9b8kSVQvTDD1775H5q0PMEq3
      0q8do/10fP0ZQt9+Hsluo9rRTSUQuSU8CNgUGzZFaUrCM00TWZbxer1omkalUkHXdXK5HB6P
      p27PNHqzWkW6l450q31G29H5W9lr96wRvF7j824xgufm5pqitiulOt9ONbDb7ZTL5eZosGES
      /d/+hNif/XTVNth6Ioz8/n+PffzWuq5Wh28V9Mpms7hcrvrnkUgk6t4pn89HoVBo0v8bO3jj
      c1qxjlZRbus5LWGyCIVCW2YEW9/V3OwNSmWdPaMjO2MEryfNYCUqk5Ms/PBHK553n3xi+QJX
      polu1ubRGoaJuAMxglZR36UBrEa/fSssT1FTucD0P/4DUi+9dds2VKIxrvy9/5F9f/y72MZG
      62qTYRhUKhWKxSIuV22ne+tYqVSq6/1Lc5EkSULX9RVHt5UMfmj2hi2dj7Bd7+ZcLksiVSCf
      jG+vALz+4iscO3GIqXgBu1kmGA4TT+WolDL4Q93YxAqSZGdhMY1RLjEwOkRerSBWVWSnh76e
      rhXLvt18AMf4OOVChvfPXmb/cB8z83GSc7N0DI3ywMEhvvtH3+Xwk4/x4PjYdjz6qqz0xVpf
      /tJktqVIklT3m1vXpv7ipTV1fgujVOb6f/vPOfSTP8QZ9GOz2ahUKjidzib1pVwuo2kagiBQ
      LpeXBcc0TWuKKyzV6a3/lwp+3RZawWhuvHarsdsdeLwifV1d22sE9/eHOHNxFr9YplhIc+bq
      Ii5BwuELYqgVMukMi8kkHcEwnd3d5HMZojPz2Gwu1Hxu0/Xb3X76ejqIdPXi87nAbiM5G0cr
      ZXF0jqLrO5MAaHUI663X6txKb/9GT4uldoiaztz/8d11t6MSjRH7s5/Wo65WjlGjcep0OnE6
      nQiCQLVarQuBhaqqLVM4rL+t+EWrEQ+orTQhNEedt9sjNDyyl6OHxwlHwts7AvTvGaNb11Ak
      ESM6z0i4C4ciYQogmJBISHgDYQrZLIooYpf9DDm9hEIBAvrmJ8mXcmlS8RQCEplMiaNj4+Sr
      UDRd7B9xMbL3zs8QWyn7EljmdmyF5cWx7hMEgfwb76Nn1rd/m0X8h68w+l//HfL5fD3nCKhn
      ZPp8PmRZrmehWu5Mq1M3qkKNNJ5bKTJtmiaiIGJTxKYytkIAGtUxQRQRaD0fe3uXRnTeyuMf
      Hd2z7Hy/q7bwk9+7/lUYHOPjRP789m+9Y8ePA9DXWzNqrZnAR088su46t5qlOTytEttWuscK
      PimKQvzMxldsUydmKCfTSM5bggW3AlxL1THTbJ6vvJLOvlrnt87XBV9oFoCtEIS5mRtMzydx
      SFUcrhD79o0gy3JTn4RtjgM0hsS3msrkJAu/80/Iv/FG67oNg7vRvWV1IE3TmgxHi1YT0y0a
      PT+GYdSN0mps7YsDtEJdiGOz2ZbVa5pmPfi1VPBWe7M3jg63Y+k1jZ6kzQiA0+lAliWcngCK
      VLObrPhI08+Ga1gD5z7+iFLFYM++URRZIbEQxe31Mr+YorPDR65QQRE0gp19+Dzrm/VlGcGO
      8XGyiUV+8lc/5ZEnn0HN5zhyaJwf/+h7+H3DPPXMzr/pG7FcjVZOvCAIdUG4Xa7PUlehNYVQ
      3Ow0zsVZ1KGe+myzRpbOHFutY651tphhGGi6hihKmKaBIitNnX4r7IBKucJAfz+iXsLh7Vjx
      um0VANnmxG+DWDyBy+5gfmEeY3oabzhMqmCiGBoaOoVCft0C0Igv3Mnw3jH2DQ0weeM6uq5j
      9/vY4FSDbcWaVWUZk+t541nnrbybarWKKIo4Rlderdo0QTdNjJsDjSiAJAhYVYmKiP/9Fyi7
      RfKj44iCWBfGpfbIavZJ43HDNBBYRY2jNoLphoF4c2FSq+zGGXKbobtvbSt4b+/q0N0dlE3o
      DPpQ7A5GR0Y4dPwELqeHwb4Oevv6cDod+HybXFfG1Dh66AFi87NkMiqFUon9/UPsvQt3fq9U
      KhQKhWWqzloyPUVRxOFw1FdkEIRarn3gydajnGaYFKomJQ3Keu2npEGhaqLdlIjQkB9BFLB9
      /A6KXEtTburMDRHh9byVddNAN3TMFoqoKNxcU0hW6qnRrQTtnk+F8AfDHAkuX+bc37Bfr/Om
      IbxelhrB3oCMlz4i3bX9vHwH7rx/fy0s7USNbsLbdbBC4VaulLUqg2EYyCO9+B4/TvbtD+vn
      q7qJqrcqBUxqguCQTfqP1+ZJC5Vyy/atdGw1BATg5qjWIhVREGopF63quNMZodtuBK9PiE10
      fbnRvFQvheVGcO2aW0a3cRcbwY3OgbV2/lZpy36/v24UD//+f4djT22HTc1YufM3ompQrdba
      UX7oSbQln/Nq8YjVEAQBWZTq6s16711vx1dVlYsXL9bXQQKa+sFqbOsIcOrtt+kbGubGzCx7
      h/opV3Wm56KMDPQgKE4ysXm6BkZJLkZx2CRcPhdz0wWwG0T8LrKFCg4FYokMx4490FR2oxE8
      d/UK75y/xiNHDvDhuYt87ctf4OLp91iIw1PPPbqdj7huliaJ3c7vb91j2QxWpHaZmuCwsfff
      /U9M/Fe/S+Ljq2tuz/XrGu7//G9S6hqoZ+/eCdbi6lyrIFy7do0PPviAhx9+GN9N7WJ64jLx
      RApddtDd3c9gX+ulMLd1BDg4doBEKk1XZ4hsNku+UKKrM8TszAyFQhZ/IEJycRGorYefy+VI
      ZzIszs5T1gQEQ6OoanjdrlXrScTmGe1z8f6VWcYOPVCbVujxIrl2aNvVVVg6Gd6iMaV56du+
      0e9ut9vxer3YbDaKxWL9Gr/fT2jPEA/84F/DbT6vRlLXE1R6hzfxRLd/y7ZiKzM+e3p6GBoa
      akhKNEln8uwf7SfSN4B+M3vVcj83/mzrCFAqlRgeGqZYzKIIIDk8qKU84b0BNEHG53ET0A3A
      JJNJ4vL48HnCxNNZOiMhDD1APp+C2yyMdeRTn+aD02c4fiBEKpWkUPJRKKvsO7gx+2I7aUx1
      WNpxVvK4WALgcDjqKQumadYDV3a7vWmCyXr6lV4qb8rtuJlOvFqd6y1XkqSmQJ7P76ci+xDz
      CfqHR5EE6nGApjaY5r25MFZjxuJaWG8G6nYtjGWlQzcmji2d77t0hLBSjy3DNxQKUSgU6rOz
      nE5nfQZYtVrlF5/7e+TPT6ypPZ7xUY798F9sOGC50ajtSqqf9Zk4HA4cDkc9brIab775Jleu
      XOH555+nr2/lTc1bpa7LcOsNklicx5DsuJ1OXC7HmgvZCSqTkxR/+KPmtGeztm2QKIqYhgE3
      c0Bge+cDrIelmZGN3o+lGZMW1kRzq1NYrtSVru187tNrFoDIs481dX5r3rC1hMntglvrMd4b
      n7XxuBWVVVUVl8uFzWard/q17KfgcDjo7OwkFoutKgCtaPqGp6dmGNy3h3OnT9PZ208slaIz
      6KGgllHLBgG/nehChhMH+zk7ncFJCYfTUdvqSLKjVVScHj/jYzX/e6s5wZJRQVIUQCTU1YPL
      trFoVaMRHL/0Ea9eTtMdcFCtlHnm6Sfu6kjwUpVjLYawz+erqz6JRKI+GlidtFF4Rv/+X2fm
      T39KJZZatUxbJETP36qtzWTFGKrVan3ZlaWT4NejKllBvsbns0Y7l8tVnyBjGEY9P8eKbVh1
      r0cN6u/v58iRI2u+3qLJCA5FgkxOTtA3NMLklQtcuXIdQXHiVgQWYgvk8gVkUURTi/SNjFLV
      KmRjCQRZIZXJEQj4CXjdtwoXls8JttlclNUyZz48veFV4Zbi7BthryuDJxginU7digTfhbsf
      tJo0sppBKAhCfW0dK+/e5/PVJ7nn83lSqVsdXdd1KpLA4T/6LZSgr2WZAErQx5F/81s4wwG8
      Xi/BYBC3200wGCQUCjV1xNUCYUvbbXVcRVFwOp0EAgEikQh+vx9FUXC5XDidTlwuF3a7HYfD
      UTdQrTwpXdcpFostl39shc1m48aNG8zOzi47ty436MDQCAPDNbWht7/r5qwpEeihf3R/Lbwh
      CIiCgBvoPHocQZIwdR2xhb7cak5w0O/FV3bS3ddHuaLhsm++l8qSgOYfZrjDQdj3aD0S7A6t
      PKFmJ2m1iG2rUcCacpjJZDBNk1Kp1PL6pRNYdF3HOT7C8R/9AVN/8Kcs/uxtDLWmSogOO51f
      eJyhf/gdnH1d9YVpoeZPt+b+Op1O5ufn6/GGbDZb7+zWiGDZSZb9KAi1OQ5ut5tKpYKiKHUV
      ymazYRhGfTUL67i1Pqmmadhst4Jj1qpyaxkFxsbGePDBB5uOvfPm2zx4bD+fXJ5Z1Q3anhO8
      yes3MifYUgWWvlVbCUAgECCZTLZ8CyumQfVmsCkUCiHLMvl8vsk9KggCVDTUG7UFuRyDPWCr
      RZDD4XC9kwmCQKFQqC9daB2rVqvkcrmmzi/Lcn2+QOMONMFgsL5qhPUZWnMHLHXN2pNAuTnx
      3lqnqFGVa1TpNrpF0vVLE3RGbCxWHFAqMzjYXZ/E38gOrZlQi/i2ivCuFSsSXJmcrB8zDL2e
      9HW3s1LnX2o0tvIOQa3zB86/h2LW3v6ZTAbDMOods/EeU5Gw7+nHvqcfQ651Rmtur9U5LSN7
      6Vt36UK8VizCGo2s4JzP56urMZbaZL31rZ9yuVxLhDMNcvkcuVyuLlCKotTtms2nQJiIikkJ
      D2Ipy+Bw386kQ9+JhbGMYpFTr78K3i7KmTlkZ5DHHjnIn/zxj/jWd/4jfO7tW1ZvIzTGAaC1
      v9tSFaw3piRJ6EsmpmiiRObQI+iihHCz05XLZRRFIRgMUiqVmvYSsLB2XdR0jWQqSVdnV/18
      o9vXentbKorT6aRQKNQFwu12141ku93eJKjW6g+apmF32NH1WjkltXRT5zeQZQmP27OhVe9u
      j8DQzQlYHbfpT9sqAI1GsFYsAiZVBKjEuXruOqOHD5JLJslr4KgvjLX+qZD7H3iQU7/+FR2R
      XkRZpFoVefLJY1w8f4NHHt63tQ+1BTR6SKy/4ZbBKYoipUyK6USO/aODdRWglVpm5AtIbjey
      AIvROIHwLcPXZrORSaRx+2+t3WOVX1Wr9Q5u7RkGNW+QtdCttQKcZZxaawCJokilUqnHJ6w1
      Pw3DqL9ZfT4f+k0Vx9qXoBbBtiOtMulnq7ndEvD3xcJYVVVl5MAR/DYTnH5K1SrxdJEHTxza
      4ifaOlqpP436+NWrk7j9HfzsZz/g+LHHmZuJMR+7zN6RwyQKFQJyBUP00CFrLJoG/kAnuYUs
      k9fPIch+EtF5evf2MnFhime/+DSiWNuTwUo/djgc5PK5+ts6n8/XO30gEFiTf78xJ6lxMS8A
      tVymWq3e3E/MhrQDm+lVczFOLzWCX/9J0zX3rBGczWbXl5++TZFgSZLWFZGORqPLgmEWjclx
      sbkZzl08TzDgpVo0iaaLDPa6UZN5ktg5MT5GIZvGL8ECJlNTKUbCTt7+6D06ux7m4b1OrmSK
      GOkCX/5rz9f1+8a6LJ+/pmlNC19tBWuJbayFzewTrCZniN40gkdG+moOi/d/0XTNPSsA25na
      sJHr14olALBy6q/L5ULXtJvp3GbtnyAgYAIipmksM44tA7VxQ3BuzgRzOh1141hVVUqlUpM3
      506pIxthsxtlT12fqOcCtRKAuzBUtDbW2zm3+/q1crvOZk2ZLBQKy/JsLBXJUlusJUvWiq7r
      VCoVfD7ftj3f3cbQSG35R13Xa8lyew4DtUlBAvewAABMT00g2j30dYY4d/Ycg/vG8TqbU6Ar
      hSwXrs9w+NA48egsVST6e1feLbKqFpmJpRgZ6GNhboZSFYaH+reszSv5/RsHYlVV68bmUveo
      ZUxuxHsiSVI9X363YcU3vJHmgNhdtnby+lCrJuVSnkJsmtDIQRLRuWXXTEVjjA8GmUuUUEsq
      hUKxRUm3kO1O7DdlKFcsgV5d9fqN0Er1sY5ZLtDGjm/5191uN4FAYJtch7uPQqFwbwuAWVEx
      EKmITmYvn8UdWD7/uMvv4aMrc9iECnannWp19bTvilpgcSHGYjyNJEKxsradCtfd9haTX6xg
      lNXhrR+Xy0VHR0c9baHd+beOe9YIvleZn5+v/y4IAn6/H1mW60Emn89HKpWqB598Pt8d2S3x
      bmWzRnAjS9NWCoXCvW0D3Is0GrZ+vx9VVdE0jVAoVL/GWvGtrepsD6VSiVgsVtu1cqcbs9uw
      cml8Ph+madYXm00mk3VXptvt3qKcmDatsHKTNE27twXg1NtvUb2NAmdqJeKpzLLjF85fplqq
      HV+MLdaPx6NTXJu6lVe+GFtEK2VIZdaWm347LDdnsVgkk7nVLl3Xm9b92SxWekKb5VijayQS
      uYdVIFPn2ifvklUrFHJFVENAEAz+xje+wsLFD3jhvQs4bCGG9viJT84jBrqIX/2Q8OgRut3w
      q4+u0+s9zB/+368ysHeE/WEfF3J2Rtwlrlxb4BcCHDl+lItTEzw82s0vz8Rx2TVCoSBqvspf
      ++tf2lCzG7c1qj/Kzb+tXP6t8NErikI+n1+23VGbGlZ+0j07AuQXbzB44ll8/gCqmmdsMIJe
      rTA9dQND19FlF11dPTx6/DjhcAibrNC/Zx/794wi21x0dnQg2bwc2b+f/oFRFIeHJz7zabz+
      AKGQm6GhHq5dn+bQ3v2IspOeSBCvx0Nf3xAHDuxl4voE01M31t3uxs0nGndThFqy2+LiIul0
      umkLJGu4hpqwrGUBA1mW64GvNs1cvnyZhYUF3G73/eMFmrlxnXzZ5OC+UdR0CtXmIXAXrgu0
      lknebW5hpW9vBZYXyDRNotFobQ7y/SIAbdrcjlZL6bQFoM2u5p61Adq02QraAtBmV9MWgDa7
      mrYAtNnVtAWgza6mLQBtdjVtAWizq2kLQJtdTVsA2uxq2gLQZlfTFoA2u5q2ALTZ1bQFoM2u
      pi0AbXY1bQFos6tpC0CbXU1bANrsatoC0GZX0xaANruatgC02dW0BaDNrqYtAG12NW0BaLOr
      aQtAm11NWwDa7GraAtBmV9MWgDa7mrYAtNnVtAWgza6mLQBtdjVtAWizq2kLQJtdTVsA2uxq
      2gLQZlfTFoA2u5q2ALTZ1bQFoM2upi0AbXY1bQFos6tpC0CbXU1bANrsatoC0GZX0xaANrua
      tgC02dW0BaDNrqYtAG12Nf8/WI34LJuarnAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
